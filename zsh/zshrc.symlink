# time  zsh -i -c exit
# zmodload zsh/zprof  # profile startupt time


# PATH modifications
# Note that `cat /etc/paths`, and `ls /etc/paths.d` will reveal the default paths. These are often included by default.
# Some builds of ZSH require --enable-etcdir. If your Terminal runs bash by default and the runs a zsh command, zsh
# will inherit the PATH
export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh
export SHELL=/usr/local/bin/zsh

# Make hombrew stuff available. Prepend (X:$PATH) to make preferred over system bindings.
# For example homebrew ctags (/usr/local/bin/ctags) is better than system's (/usr/bin/ctags)
# Note that modern homebrew adds /usr/local/bin to /etc/paths
# export PATH=/usr/local/bin:$PATH

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH
export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/bin:$PATH"


# check for custom bin directory and add to path
if [[ -d ~/bin ]]; then
    export PATH=~/bin:$PATH
fi

# global scripts
export V=$HOME/venvs

# VENV and BREW are better than CONDA. Inherit from parent environment with --system-site-packages, and only add what
# is needed with (env)> pip install -U package


# display how long all tasks over 10 seconds take
export REPORTTIME=10

set HIST_IGNORE_SPACE

# The terminfo database contains the description of the terminal capabilities.
# Used by programs like 'vi' and 'curses' to control the screen. Usually kept at /usr/share/lib/terminfo
# Functionally equivalent to the individual entries in the 'termcap' file, but is compiled, not ASCII.
# Practically, this is used by persons who do a lot of remote access and want to preserve environments
[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo


# initialize autocomplete
# compinit is kind of slow though
# autoload -U compinit add-zsh-hook
# compinit

# hub adds bash-completion. Check bash install report
# for config ($ZSH/**/*completion.sh) source $config  # git_completion.sh sources a brewed git-complettion.bash

export EDITOR='nvim'

# This syntax is a 'if [ ] then' shorthand.
# The first evaluates to true of the variable is null.
[ -z "$TMUX" ] && export TERM=xterm-256color-italic
[ -z "$SSH_TTY"] && export TERM=xterm-256color  # SSH into linux needs correct TERM definitions
export COLORTERM=gnome-terminal  # Fixes a scrolling issue in neovim, apparently some terminals false advertise as xterm


# alias git to hub
# hash checks wether the argument is in the command hash table
if hash hub 2>/dev/null; then
    eval "$(hub alias -s)"
fi



# add-zsh-hook chpwd load-nvmrc

# have brew loaded nvm
# if hash brew 2>/dev/null; then
#    source $(brew --prefix nvm)/nvm.sh
#    source `brew --prefix`/etc/profile.d/z.sh
#    # when sourcing, check and ensure that the correct Node version is set
#    load-nvmrc


# If you are using the fzf plugin
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


# APPLE TERMINAL PREFERENCES

# Tell the terminal about the working directory whenever it changes and load the COLORSCHEME
if [[ "$TERM_PROGRAM" == "Apple_Terminal" ]] && [[ -z "$INSIDE_EMACS" ]]; then

    update_terminal_cwd() {
        # Identify the directory using a "file:" scheme URL, including
        # the host name to disambiguate local vs. remote paths.

        # Percent-encode the pathname.
        local URL_PATH=''
        {
            # Use LC_CTYPE=C to process text byte-by-byte.
            local i ch hexch LC_CTYPE=C
            for ((i = 1; i <= ${#PWD}; ++i)); do
                ch="$PWD[i]"
                if [[ "$ch" =~ [/._~A-Za-z0-9-] ]]; then
                    URL_PATH+="$ch"
                else
                    hexch=$(printf "%02X" "'$ch")
                    URL_PATH+="%$hexch"
                fi
            done
        }

        # HOST environment variable defines within zsh
        local PWD_URL="file://$HOST$URL_PATH"
        #echo "$PWD_URL"        # testing
        # Terminal > Preferences > Tab > Escape Sequence tool tip: ESC ] PS; Pt BEL
        printf '\e]7;%s\a' "$PWD_URL"
    }

    # Register the function so it is called whenever the working
    # directory changes.
    autoload add-zsh-hook
    add-zsh-hook chpwd update_terminal_cwd

    # Tell the terminal about the initial directory.
    update_terminal_cwd

    # Load the COLORSCHEME of the profile. Assumes that name of Terminal profile is a base16 colorscheme
    # e.g. Classic Dark
    cs0=`osascript -e "tell application \"Terminal\" to return name of current settings in selected tab of window 1"`
    # This is used by NVIM to coordinate COLORSCHEME
    export COLORSCHEME=$cs0
fi

# emacs style keybindings. Don't normally need this, but zsh in tmux does need it.
bindkey -e

# zprof  # profile startup time

# source all .zsh files inside of the zsh/ directory.
# May depend on variables above
for config ($ZSH/**/*.zsh) source $config


# The default inline backend for jupyter console is bad
export MPLBACKEND="macosx"
